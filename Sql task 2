--Write a SQL query to insert at least 10 sample records into each table

INSERT INTO Venu (venue_name, address) VALUES
('Venue A', 'Address A'),
('Venue B', 'Address B'),
('Venue C', 'Address C'),
('Venue D', 'Address D'),
('Venue E', 'Address E'),
('Venue F', 'Address F'),
('Venue G', 'Address G'),
('Venue H', 'Address H'),
('Venue I', 'Address I'),
('Venue J', 'Address J');

INSERT INTO Event (event_name, event_date, event_time, venue_id, total_seats, available_seats, ticket_price, event_type, booking_id) VALUES
('Event 1', '2024-02-15', '18:00:00', 1, 100, 80, 25.00, 'Movie', 1),
('Event 2', '2024-03-20', '20:30:00', 2, 150, 120, 30.00, 'Concert', 2),
('Event 3', '2024-04-10', '15:00:00', 3, 80, 60, 20.00, 'Sports', 3),
('Event 4', '2024-05-05', '19:45:00', 4, 200, 180, 35.00, 'Movie', 4),
('Event 5', '2024-06-08', '21:15:00', 5, 120, 100, 28.00, 'Concert', 5),
('Event 6', '2024-07-15', '19:00:00', 6, 250, 80, 25.00, 'Circus', 6),
('Event 7', '2024-08-18', '18:30:00', 7, 150, 150, 50.00, 'Movie', 7),
('Event 8', '2024-09-22', '17:00:00', 8, 80, 60, 25.00, 'Sports', 8),
('Event 9', '2024-10-25', '19:45:00', 9, 200, 180, 35.00, 'Movie', 9),
('Event 10', '2024-11-30', '21:15:00', 10, 120, 100, 28.00, 'Concert', 10);

INSERT INTO Customer (customer_name, email, phone_number, booking_id) VALUES
('Customer 1', 'customer1@example.com', '1234567890', 1),
('Customer 2', 'customer2@example.com', '9876543210', 2),
('Customer 3', 'customer3@example.com', '1112223333', 3),
('Customer 4', 'customer4@example.com', '4445556666', 4),
('Customer 5', 'customer5@example.com', '7778889999', 5);
('Customer 6', 'customer6@example.com', '9788105890', 6),
('Customer 7', 'customer7@example.com', '9879785673', 7),
('Customer 8', 'customer8@example.com', '1113336666', 8),
('Customer 9', 'customer9@example.com', '4448885555', 9),
('Customer 10', 'customer10@example.com', '7891234567', 10);

INSERT INTO Booking (customer_id, event_id, num_tickets, total_cost, booking_date) VALUES
(1, 1, 2, 50.00, '2024-02-10'),
(2, 2, 3, 90.00, '2024-03-18'),
(3, 3, 1, 20.00, '2024-04-05'),
(4, 4, 4, 140.00, '2024-05-01'),
(5, 5, 2, 56.00, '2024-06-05');
(6, 6, 2, 50.00, '2024-004-08'),
(7, 7, 4, 90.00, '2024-07-14'),
(8, 8, 1, 20.00, '2024-08-16'),
(9, 9, 5, 140.00, '2024-09-18'),
(10, 10, 2, 56.00, '2024-06-06');


-- Write a SQL query to list all Events

SELECT * FROM Event;


-- Write a SQL query to select events with available tickets
SELECT * FROM Event WHERE available_seats > 0;


-- Write a SQL query to select events name partial match with ‘cup’
SELECT * FROM Event WHERE event_name LIKE '%cup%';


-- Write a SQL query to select events with ticket price range is between 1000 to 2500
SELECT * FROM Event WHERE ticket_price BETWEEN 1000 AND 2500;


-- Write a SQL query to retrieve events with dates falling within a specific range

SELECT * FROM Event WHERE event_date BETWEEN '2024-03-01' AND '2024-04-01';


-- Write a SQL query to retrieve events with available tickets that also have "Concert" in their name

 SELECT * FROM Event WHERE event_type = 'Concert' AND available_seats > 0;


-- Write a SQL query to retrieve users in batches of 5, starting from the 6th user

SELECT * FROM Customer LIMIT 5 OFFSET 5;


-- Write a SQL query to retrieve bookings details contains booked no of ticket more than 4

SELECT * FROM Booking WHERE num_tickets > 4;


-- Write a SQL query to retrieve customer information whose phone number end with ‘000’

SELECT * FROM Customer WHERE phone_number LIKE '%000';


-- Write a SQL query to retrieve the events in order whose seat capacity more than 15000

SELECT * FROM Event WHERE total_seats > 15000;


-- Write a SQL query to select events name not start with ‘x’, ‘y’, ‘z’

SELECT * FROM Event WHERE event_name NOT LIKE 'x%' AND event_name NOT LIKE 'y%' AND event_name NOT LIKE 'z%';
